{"remainingRequest":"/Users/sun/iceworks-workspace/webssh/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sun/iceworks-workspace/webssh/src/layouts/HeaderAsideLayout/components/ScrollBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sun/iceworks-workspace/webssh/src/layouts/HeaderAsideLayout/components/ScrollBar.vue","mtime":499162500000},{"path":"/Users/sun/iceworks-workspace/webssh/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sun/iceworks-workspace/webssh/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/sun/iceworks-workspace/webssh/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sun/iceworks-workspace/webssh/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\nconst delta = 15;\n\nexport default {\n  name: 'ScrollBar',\n  data() {\n    return {\n      top: 0,\n    };\n  },\n  methods: {\n    handleScroll(e) {\n      const eventDelta = e.wheelDelta || -e.deltaY * 3;\n      const $container = this.$refs.scrollContainer;\n      const $containerHeight = $container.offsetHeight;\n      const $wrapper = this.$refs.scrollWrapper;\n      const $wrapperHeight = $wrapper.offsetHeight;\n      if (eventDelta > 0) {\n        this.top = Math.min(0, this.top + eventDelta);\n      } else if ($containerHeight - delta < $wrapperHeight) {\n        if (this.top < -($wrapperHeight - $containerHeight + delta)) {\n          this.top = this.top;\n        } else {\n          this.top = Math.max(this.top + eventDelta, $containerHeight - $wrapperHeight - delta);\n        }\n      } else {\n        this.top = 0;\n      }\n    },\n  },\n};\n",{"version":3,"sources":["ScrollBar.vue"],"names":[],"mappings":";;;;;;;;;AASA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ScrollBar.vue","sourceRoot":"src/layouts/HeaderAsideLayout/components","sourcesContent":["<template>\n  <div class=\"scroll-container\" ref=\"scrollContainer\" @wheel.prevent=\"handleScroll\" >\n    <div class=\"scroll-wrapper\" ref=\"scrollWrapper\" :style=\"{top: top + 'px'}\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script>\nconst delta = 15;\n\nexport default {\n  name: 'ScrollBar',\n  data() {\n    return {\n      top: 0,\n    };\n  },\n  methods: {\n    handleScroll(e) {\n      const eventDelta = e.wheelDelta || -e.deltaY * 3;\n      const $container = this.$refs.scrollContainer;\n      const $containerHeight = $container.offsetHeight;\n      const $wrapper = this.$refs.scrollWrapper;\n      const $wrapperHeight = $wrapper.offsetHeight;\n      if (eventDelta > 0) {\n        this.top = Math.min(0, this.top + eventDelta);\n      } else if ($containerHeight - delta < $wrapperHeight) {\n        if (this.top < -($wrapperHeight - $containerHeight + delta)) {\n          this.top = this.top;\n        } else {\n          this.top = Math.max(this.top + eventDelta, $containerHeight - $wrapperHeight - delta);\n        }\n      } else {\n        this.top = 0;\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.scroll-container {\n  width: 100%;\n  height: 100%;\n  background-color: #00142a;\n  .scroll-wrapper {\n    position: absolute;\n    width: 100%;\n  }\n}\n</style>\n"]}]}